====================== POST request ======================
post_API_response.ok():  true
post_API_response.status(): 200
postAPIresponseJson:  {
  bookingid: 1881,
  booking: {
    firstname: 'Testers talk Cypress',
    lastname: 'Testers talk Playwright',
    totalprice: 1000,
    depositpaid: true,
    bookingdates: { checkin: '2025-04-12', checkout: '2025-04-30' },
    additionalneeds: 'Aguante la Renga'
  }
}
postAPIresponseJson.bookingid:  1881
postAPIresponseJson.booking.firstname:  Testers talk Cypress
postAPIresponseJson.booking.lastname:  Testers talk Playwright
postAPIresponseJson.booking.totalprice:  1000
postAPIresponseJson.booking.depositpaid:  true
...
postAPIresponseJson.booking.bookingdates:  { checkin: '2025-04-12', checkout: '2025-04-30' }
postAPIresponseJson.booking.bookingdates.checkin:  2025-04-12
postAPIresponseJson.booking.bookingdates.checkout:  2025-04-30
...
postAPIresponseJson.booking.additionalneeds:  Aguante la Renga
 
====================== GET request ======================
 
getAPIresponse.json():  {
  firstname: 'Testers talk Cypress',
  lastname: 'Testers talk Playwright',
  totalprice: 1000,
  depositpaid: true,
  bookingdates: { checkin: '2025-04-12', checkout: '2025-04-30' },
  additionalneeds: 'Aguante la Renga'
}

expect(getAPIresponse.ok()).toBeTruthy()
getAPIresponse.ok():  true

expect(getAPIresponse.status()).toBe(200)
getAPIresponse.status():  200
 
====================== Query request ======================
 
ü§¨ getAPIresponse02.json(): [
  { bookingid: 1881 },
  { bookingid: 1875 },
  { bookingid: 1884 },
  { bookingid: 1871 },
  { bookingid: 1869 }
]

====================== PUT request ======================

üëçüèæ tokenResponse.json():  { token: 'f17f5a1a7a12857' }
üëçüèæ tokenResponse.json().token:  f17f5a1a7a12857
await putResponse.json():  {
  firstname: 'postman by testers talk',
  lastname: 'rest assured by testers talk',
  totalprice: 111,
  depositpaid: true,
  bookingdates: { checkin: '2025-03-14', checkout: '2025-03-31' },
  additionalneeds: 'la mona jimenez'
}

putResponse.ok():  true
expect(putResponse.ok()).toBeTruthy()

putResponse.status():  200
expect(putResponse.status()).toBe(200)

ü§¨ getAPIresponse03.json(): [ { bookingid: 1881 } ]

====================== PATCH request ======================

tokenNum: f17f5a1a7a12857

await patchResponse.json():  {
  firstname: "we don't talk about Bruno",
  lastname: 'rest assured by testers talk',
  totalprice: 111,
  depositpaid: true,
  bookingdates: { checkin: '2025-03-14', checkout: '2025-03-31' },
  additionalneeds: 'Encanto movie'
}

patchResponse.ok():  true
expect(patchResponse.ok()).toBeTruthy()

patchResponse.status():  200
expect(patchResponse.status()).toBe(200)

